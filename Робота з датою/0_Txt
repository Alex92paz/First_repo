'''
Ключові аспекти: методи роботи з датами і часом
datetime.now(): Метод повертає об'єкт datetime, який містить поточну дату та час.
datetime.date(): Цей метод повертає об'єкт date, який представляє лише дату (без часу).
datetime.time(): Метод повертає об'єкт time, який містить лише час (без дати).
datetime.combine(date, time): Цей метод використовується для об'єднання об'єктів date та time і створення нового об'єкта datetime.
datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0): Конструктор класу datetime дозволяє створити об'єкт datetime з конкретною датою та часом.
weekday(): Метод визначає номер дня тижня для вказаної дати, де понеділок має номер 0, а неділя - 6.



Методи порівняння об'єктів datetime:
== (рівність): Порівнює, чи є дві дати рівні.
!= (нерівність): Порівнює, чи дві дати не є рівними.
< (менше): Визначає, чи одна дата передує іншій.
> (більше): Визначає, чи одна дата наступає за іншою.
<= (менше або дорівнює): Порівнює, чи одна дата менше або дорівнює іншій.
>= (більше або дорівнює): Порівнює, чи одна дата більше або дорівнює іншій.



Синтаксис методу strftime виглядає наступним чином:
datetime_object.strftime(format)
Де datetime_object - це об'єкт datetime, а format - рядок формату, який визначає, як дата та час повинні бути представлені.
Кожен код у рядку формату починається з символу % і представляє певний компонент дати або часу. Ось деякі з найбільш використовуваних кодів:
%Y - рік з чотирма цифрами (наприклад, 2023).
%y - рік з двома цифрами (наприклад, 23).
%m - місяць як номер (наприклад, 03 для березня).
%d - день місяця як номер (наприклад, 14).
%H - година (24-годинний формат) (наприклад, 15).
%I - година (12-годинний формат) (наприклад, 03).
%M - хвилини (наприклад, 05).
%S - секунди (наприклад, 09).
%A - повна назва дня тижня (наприклад, Tuesday).
%a - скорочена назва дня тижня (наприклад, Tue).
%B - повна назва місяця (наприклад, March).
%b або %h - скорочена назва місяця (наприклад, Mar).
%p - AM або PM для 12-годинного формату.

'''